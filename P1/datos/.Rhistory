#Ejercicio 2
library(ISLR)
library(MASS)
fix(Boston)
attach(Boston)
lm.fit = lm(crim~., data=Boston)
plot(lm.fit)
View(Boston)
[[2]]
plot(lm(crim~Boston[2]))
lm(crim~Boston[[2]])
lm.fit = lm(crim~Boston[[x]])
lm.fit = lm(crim~Boston[[seq(along=x)]])
x <- 2:12
lm.fit = lm(crim~Boston[[seq(along=x)]])
lm.fit = lm(crim~Boston[[seq(x)]])
lm(crim~Boston[[1]])
lm(crim~Boston[[2]])
lm(crim~Boston[[3]])
lm(crim~Boston[[4]])
lm(crim~Boston[[5]])
View(Boston)
View(Boston)
cor(Boston)
cor(Boston)
max(cor(Boston))
source('~/Copy/Informatica/Carrera/3º/2º Cuatrimestre/AA/Prácticas/P1/scriptP1.R')
reg[1] <- lm(crim~Boston[[2]]) #crim vs zn
reg[2] <- lm(crim~Boston[[3]]) #crim vs indus
reg[3] <- lm(crim~Boston[[4]]) #crim vs chas
reg[4] <- lm(crim~Boston[[5]]) #crim vs nos
reg[5] <- lm(crim~Boston[[6]]) #crim vs rm
reg[6] <- lm(crim~Boston[[7]]) #crim vs age
reg[7] <- lm(crim~Boston[[8]]) #crim vs dis
reg[8] <- lm(crim~Boston[[9]]) #crim vs rad
reg[9] <- lm(crim~Boston[[10]]) #crim vs tax
reg[10] <- lm(crim~Boston[[11]]) #crim vs pratio
reg[11] <- lm(crim~Boston[[12]]) #crim vs black
source('~/Copy/Informatica/Carrera/3º/2º Cuatrimestre/AA/Prácticas/P1/scriptP1.R')
#guardo los valores de las rectas de regresion en el vector reg:
reg <- 1
reg[1] <- lm(crim~Boston[[2]]) #crim vs zn
reg[2] <- lm(crim~Boston[[3]]) #crim vs indus
reg[3] <- lm(crim~Boston[[4]]) #crim vs chas
reg[4] <- lm(crim~Boston[[5]]) #crim vs nos
reg[5] <- lm(crim~Boston[[6]]) #crim vs rm
reg[6] <- lm(crim~Boston[[7]]) #crim vs age
reg[7] <- lm(crim~Boston[[8]]) #crim vs dis
reg[8] <- lm(crim~Boston[[9]]) #crim vs rad
reg[9] <- lm(crim~Boston[[10]]) #crim vs tax
reg[10] <- lm(crim~Boston[[11]]) #crim vs pratio
reg[11] <- lm(crim~Boston[[12]]) #crim vs black
reg[2]
cofint(lm(crim~Boston[[3]]))
confit(lm(crim~Boston[[3]]))
confint(lm(crim~Boston[[3]]))
confint(reg[2])
summary(lm(crim~Boston[[2]]))
summary(lm(crim~Boston[[3]]))
summary(lm(crim~Boston[[4]]))
summary(lm(crim~Boston[[5]]))
summary(lm(crim~Boston[[6]]))
summary(lm(crim~Boston[[7]]))
summary(lm(crim~Boston[[8]]))
summary(lm(crim~Boston[[9]]))
summary(lm(crim~Boston[[10]]))
summary(lm(crim~Boston[[11]]))
summary(lm(crim~Boston[[12]]))
help(boston)
help(Boston)
sd(lm(crim~Boston[[12]]))
sd(Boston[[12]])
source('~/Copy/Informatica/Carrera/3º/2º Cuatrimestre/AA/Prácticas/P1/scriptP1.R')
sd(Boston[[4]])
reg[12] <- lm(crim~Boston[[13]]) #crim vs lstat
reg[13] <- lm(crim~Boston[[14]]) #crim vs medv
sd(Boston[[14]])
sd(Boston[[zn]])
sd(Boston[[2]])
plot(lm(crim~Boston[[4]]))
plot(lm(crim~Boston[[4]]))
plot(lm(crim~Boston[[4]]))
plot(lm(crim~Boston[[4]]))
lm(crim~.)
lm.fit = lm(crim~.)
lm.fit = lm ( medv∼. , data = Boston )
lm.fit = lm ( medv~. , data = Boston )
lm.fit = lm ( crim~. , data = Boston )
summary(lm.fit)
plot(lm.fit)
source('~/Copy/Informatica/Carrera/3º/2º Cuatrimestre/AA/Prácticas/P1/scriptP1.R')
reg[2] <- lm(crim~Boston[[3]]) #crim vs indus
reg[3] <- lm(crim~Boston[[4]]) #crim vs chas
#######################################
#Ejercicio 2
#######################################
library(ISLR)
library(MASS)
fix(Boston)
attach(Boston)
#apartado a)
# i)
#guardo los valores de las rectas de regresion en el vector reg:
reg <- 1
reg[1] <- lm(crim~Boston[[2]]) #crim vs zn
reg[2] <- lm(crim~Boston[[3]]) #crim vs indus
reg[3] <- lm(crim~Boston[[4]]) #crim vs chas
reg[4] <- lm(crim~Boston[[5]]) #crim vs nos
reg[5] <- lm(crim~Boston[[6]]) #crim vs rm
reg[6] <- lm(crim~Boston[[7]]) #crim vs age
reg[7] <- lm(crim~Boston[[8]]) #crim vs dis
reg[8] <- lm(crim~Boston[[9]]) #crim vs rad
reg[9] <- lm(crim~Boston[[10]]) #crim vs tax
reg[10] <- lm(crim~Boston[[11]]) #crim vs pratio
reg[11] <- lm(crim~Boston[[12]]) #crim vs black
reg[12] <- lm(crim~Boston[[13]]) #crim vs lstat
reg[13] <- lm(crim~Boston[[14]]) #crim vs medv
#ii)
summary(lm(crim~Boston[[4]])) #mal
sd(Boston[[4]]) #mal
#buscar las variables que tengan MENOR p-valor
#iii)
plot(lm(crim~Boston[[4]]))
lm.fit = lm(crim~. , data = Boston)
#par(mfrow=c(2,2), oma=c(0,0,4,0))
#plot(cri)
path = "~/Copy/Informatica/Carrera/3º/2º Cuatrimestre/AA/Prácticas/P1/datos"
#######################################
#Ejercicio 1
#######################################
library(ISLR)
library(MASS)
fix(Boston)
attach(Boston)
#2.
plot(black,crim) #criminialidad vs negro
plot(age,tax) #edad vs valor de vivivienda/10.000
summary(lm(crim~Boston[[11]]))
help(Boston)
lm(crim~Boston[[2]])
lm(crim~Boston[[3]]) #crim vs indus
lm(crim~Boston[[4]]) #crim vs chas
lm(crim~Boston[[5]]) #crim vs nos
lm(crim~Boston[[6]]) #crim vs rm
lm(crim~Boston[[7]]) #crim vs age
lm(crim~Boston[[8]]) #crim vs dis
lm(crim~Boston[[9]]) #crim vs rad
lm(crim~Boston[[10]]) #crim vs tax
lm(crim~Boston[[11]]) #crim vs pratio
lm(crim~Boston[[12]]) #crim vs black
lm(crim~Boston[[13]]) #crim vs lstat
summary(lm(crim~Boston[[2]])) #mal
summary(lm(crim~Boston[[3]])) #mal
summary(lm(crim~Boston[[4]])) #mal
summary(lm(crim~Boston[[5]])) #mal
summary(lm(crim~Boston[[6]])) #mal
summary(lm(crim~Boston[[7]])) #mal
summary(lm(crim~Boston[[8]])) #mal
summary(lm(crim~Boston[[9]])) #mal
summary(lm(crim~Boston[[10]])) #mal
summary(lm(crim~Boston[[11]])) #mal
summary(lm(crim~Boston[[12]])) #mal
summary(lm(crim~Boston[[13]])) #mal
summary(lm(crim~Boston[[14]])) #mal
sd(Boston[[6]])
plot(lm(crim~Boston[[6]]))
plot(lm(crim~Boston[[9]]))
plot(lm(crim~Boston[[9]]))
plot(lm(crim~Boston[[9]]))
plot(lm(crim~Boston[[9]]))
lm.fit = lm(crim~. , data = Boston)
plot(lm.fit)
plot(lm.fit)
plot(lm.fit)
summary(lm(crim~Boston[[13]])) #mal
summary(lm.fit)
###Calculamos los valores del eje X
for(name in names(Boston)){ #vamos recorrieno cada columna
if(name == "zn"){ #Inicializacion de resimple y x
resimple <- lm(crim~Boston[,name]) #calculamos la recta de regresion
ejex <- resimple$coefficient #guardamos el valor del coeficiente de la recta en x
}
if(name != "crim" && name != "zn"){ #si no es la variable crim o zn (zn la hemos incluido en la inicialización)
resim <- lm(crim~Boston[,name])
ejex <- union(x,resim$coefficients[2])
}
}
###Calculamos los valores del eje Y
remul = lm(crim~. , data=Boston)
ejey <- remul$coefficients
plot(ejex,ejey)
###Calculamos los valores del eje X
for(name in names(Boston)){ #vamos recorrieno cada columna
if(name == "zn"){ #Inicializacion de resimple y x
resimple <- lm(crim~Boston) #calculamos la recta de regresion
ejex <- resimple$coefficient #guardamos el valor del coeficiente de la recta en x
}
if(name != "crim" && name != "zn"){ #si no es la variable crim o zn (zn la hemos incluido en la inicialización)
resim <- lm(crim~Boston[,name])
ejex <- union(x,resim$coefficients[2])
}
}
###Calculamos los valores del eje Y
remul = lm(crim~. , data=Boston)
ejey <- remul$coefficients
plot(ejex,ejey)
###Calculamos los valores del eje X
for(name in names(Boston)){ #vamos recorrieno cada columna
if(name == "zn"){ #Inicializacion de resimple y x
resimple <- lm(crim~Boston[,name]) #calculamos la recta de regresion
ejex <- resimple$coefficient #guardamos el valor del coeficiente de la recta en x
}
if(name != "crim" && name != "zn"){ #si no es la variable crim o zn (zn la hemos incluido en la inicialización)
resim <- lm(crim~Boston[,name])
ejex <- union(ejex,resim$coefficients[2])
}
}
###Calculamos los valores del eje Y
remul = lm(crim~. , data=Boston)
ejey <- remul$coefficients
plot(ejex,ejey)
for(var in names(Boston)){
summary(lm(crim~var+I(var^2)+I(var^3)))
}
lm(crim~rad+I(rad^2)+I(rad^3)))
lm(crim~rad+I(rad^2)+I(rad^3))
plot(lm(crim~rad+I(rad^2)+I(rad^3)))
summary(lm(crim~Boston[[2]]+I(Boston[[2]]^2)+I(Boston[[2]]^3)))
summary(lm(crim~Boston[[2]]+I(Boston[[2]]^2)+I(Boston[[2]]^3)))#######################################
summary(lm(crim~Boston[[2]]+I(Boston[[2]]^2)+I(Boston[[2]]^3)))
summary(lm(crim~Boston[[3]]+I(Boston[[3]]^2)+I(Boston[[3]]^3)))
summary(lm(crim~Boston[[4]]+I(Boston[[4]]^2)+I(Boston[[4]]^3)))
summary(lm(crim~Boston[[5]]+I(Boston[[5]]^2)+I(Boston[[5]]^3)))
summary(lm(crim~Boston[[6]]+I(Boston[[6]]^2)+I(Boston[[6]]^3)))
summary(lm(crim~Boston[[7]]+I(Boston[[7]]^2)+I(Boston[[7]]^3)))
summary(lm(crim~Boston[[8]]+I(Boston[[8]]^2)+I(Boston[[8]]^3)))
summary(lm(crim~Boston[[9]]+I(Boston[[9]]^2)+I(Boston[[9]]^3)))
summary(lm(crim~Boston[[10]]+I(Boston[[10]]^2)+I(Boston[[10]]^3)))
summary(lm(crim~Boston[[11]]+I(Boston[[11]]^2)+I(Boston[[11]]^3)))
summary(lm(crim~Boston[[12]]+I(Boston[[12]]^2)+I(Boston[[12]]^3)))
summary(lm(crim~Boston[[13]]+I(Boston[[13]]^2)+I(Boston[[13]]^3)))
summary(lm(crim~Boston[[14]]+I(Boston[[14]]^2)+I(Boston[[14]]^3)))
summary(lm(crim~Boston[[15]]+I(Boston[[15]]^2)+I(Boston[[15]]^3)))
setwd(path)
Auto = read.csv("Auto.csv", header =T, na.strings ="?")
Auto = na.omit(Auto)
attach(Auto)
#1
pairs(Auto) #scatteplot
Autocuantitativa = c("mpg","displacement","horsepower","weight","acceleration","year") #subtabla con las variables cuantitativas
head(Auto[Autocuantitativa])
cor(Auto[Autocuantitativa])
regmul <- lm(mpg~year+horsepower+weight+acceleration+displacement)
summary(regmul) #como el oeficiente estimate es grande (0.754115) podemos decir que hay una dependencia grande entre el año y el consumo
confint(regmul) #por defecto al 95%
?confint
confint(regmul, level = 0.95) #por defecto al 95%
con#5
plot(regmul)
plot(regmul)
summary(lm(mpg~horsepower:weight))#mirar la varianza residual
summary(lm(mpg~weight*horsepower))#mirar la varianza residual
summary(lm(mpg~weight*horsepower*displacement))#mirar la varianza residual
summary(lm(mpg~horsepower+weight*displacement))#mirar la varianza residual
summary(lm(mpg~horsepower+weight*displacement))#mirar la varianza residual
summary(lm(mpg~weight+horsepower*displacement))#mirar la varianza residual
summary(lm(mpg~weight*horsepower*displacement))#mirar la varianza residual
summary(lm(mpg~weight*acceleration))#mirar la varianza residual
summary(lm(mpg~weight+horsepower*acceleration))#mirar la varianza residual
summary(lm(mpg~weight+acceleration*displacement))#mirar la varianza residual
summary(lm(mpg~weight*acceleration))#mirar la varianza residual
summary(lm(mpg~weight+horsepower*displacement))#mirar la varianza residual
interaction.plot(weight, horsepower, produc, legend = F)
interaction.plot(weight, horsepower,)
interaction.plot(weight, horsepower)
?interaction
interaction(weight, horsepower)
plot(interaction(weight, horsepower))
plot(interaction(weight, horsepower,acceleration))
summary(lm(mpg~weight+horsepower*displacement))#mirar la varianza residual
lm(mpg~year+horsepower+weight+acceleration+displacement)
lm(mpg~year+horsepower+weight*horsepower+acceleration+displacement)
lm(mpg~weight*horsepower+acceleration+displacement)
summary(lm(mpg~weight*horsepower+acceleration+displacement))
summary(lm(mpg~weight*horsepower+acceleration:displacement))
summary(lm(mpg~weight*horsepower+acceleration:weight))
summary(lm(mpg~weight*horsepower+acceleration:horsepower))
summary(lm(mpg~weight*horsepower+acceleration+horsepower))
summary(lm(mpg~weight*horsepower+displacement))
summary(lm(mpg~weight*horsepower+acceleration:horsepower))
